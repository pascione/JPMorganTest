<?xml version="1.0" encoding="UTF-8"?><testrun name="TestMessage1" project="JPTest" tests="3" started="2" failures="1" errors="0" ignored="0">
  <testsuite name="TestMessage1" incomplete="true">
    <testcase name="test10MessageReceived" classname="TestMessage1" time="13.083">
      <failure>
        <expected>Message Received&#13;
10 message received: Detailed Report&#13;
Product: apple Total Sales:10 Total Value:100&#13;
</expected>
        <actual>Message Received&#13;
10 message received: Detailed Report&#13;
Product: apple Total Sales:10 Total Value:50&#13;
</actual>org.junit.ComparisonFailure: expected:&lt;...ales:10 Total Value:[10]0&#13;
&gt; but was:&lt;...ales:10 Total Value:[5]0&#13;
&gt;&#13;
	at org.junit.Assert.assertEquals(Assert.java:115)&#13;
	at org.junit.Assert.assertEquals(Assert.java:144)&#13;
	at TestMessage1.test10MessageReceived(TestMessage1.java:56)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test20MessageReceived" classname="TestMessage1" incomplete="true"/>
    <testcase name="testMessageISReceived" classname="TestMessage1" incomplete="true"/>
  </testsuite>
</testrun>
